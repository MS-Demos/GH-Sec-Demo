using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
dotnet add package Microsoft.ApplicationInsights --version 1.0.0
namespace gh_adv_sec_demo.Controllers
{
    [ApiController]
    [Route("[controller]")]
    public class VulnerabilityController : ControllerBase
    {
        // GET /vulnerability/sql-injection
        [HttpGet("sql-injection")]
        public IActionResult SqlInjection(string input)
        {
            // This code is vulnerable to SQL injection attacks
            string query = "SELECT * FROM Users WHERE Username = '" + input + "'";
            // Execute the query and return the results
            return Ok();
        }

        // GET /vulnerability/xss
        [HttpGet("xss")]
        public IActionResult Xss(string input)
        {
            // This code is vulnerable to cross-site scripting attacks
            string output = "<h1>Hello, " + input + "!</h1>";
            // Return the output as HTML
            return Content(output, "text/html");
        }

        // GET /vulnerability/command-injection
        [HttpGet("command-injection")]
        public IActionResult CommandInjection(string input)
        {
            // This code is vulnerable to command injection attacks
            string command = "ping " + input;
            // Execute the command and return the results
            return Ok();
        }
    }
}